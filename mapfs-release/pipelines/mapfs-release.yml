---
#@ load("@ytt:data", "data")
#@ load("ytt-helpers.star", "helpers")
groups:
- name: release
  jobs:
  - unit-and-integration-tests
  - lint-repo
  - claim-env
  - prepare-env
  - run-cats
  - export-release
  - volume-services-acceptance-tests
  - ship-what
  - ship-it
  - unclaim-env

- name: periodics
  jobs:
  - bump-dependencies-go-mod
  - bump-golang
  - bump-bosh-blobs
  - sync-dot-github-dir
  - sync-readme

- name: manual
  jobs:
  - release-env-lock

- name: version
  jobs:
  - patch-bump
  - minor-bump
  - manual-bump-mapfs-major

resource_types:
- name: semver
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/dockerhub-proxy-cache/concourse/semver-resource
    tag: "1.6"
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))
  type: registry-image

- name: google-chat-notify-resource
  type: registry-image
  source:
    repository:  us-west2-docker.pkg.dev/mapbu-cryogenics/dockerhub-proxy-cache/springio/google-chat-notify-resource
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))
    tag: 0.0.1-SNAPSHOT

- name: git
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/dockerhub-proxy-cache/concourse/git-resource
    tag: ubuntu
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

- name: pcf-pool
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
    tag: v1
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

- name: pull-request
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/concourse-resources/pr-queue-resource
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

resources:
- name: golang-release-latest
  type: git
  icon: tag-outline
  source:
    tag_filter: v*
    uri: https://github.com/bosh-packages/golang-release.git

- name: repo
  type: git
  icon: source-branch
  source:
    branch: develop
    private_key: ((github-tas-runtime-bot/private-key))
    uri: git@github.com:cloudfoundry/mapfs-release.git
    ignore_paths:
    - .github/
    - .gitignore
    - .final_build
    - CODEOWNERS
    - LICENSE
    - NOTICE
    - README*
    - docs/
    - releases/

- name: release-branch
  type: git
  icon: source-branch
  source:
    branch: release
    private_key: ((github-tas-runtime-bot/private-key))
    uri: git@github.com:cloudfoundry/mapfs-release.git

- name: develop-branch-mergeback
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/mapfs-release.git
    branch: develop
    private_key: ((github-tas-runtime-bot/private-key))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci

- name: repo-readme
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths:
      - shared/*.md
      - mapfs-release/*.md
      - mapfs-release/readme/*.md

- name: go-version
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths: [go-version.json]

- name: cf-deployment
  type: git
  icon: source-branch
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-acceptance-tests
  type: git
  icon: source-branch
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-volume-services-acceptance-tests
  type: git
  icon: source-branch
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git
    branch: main

- name: daily-at-midnight
  type: time
  icon: clock
  source:
    interval: '24h'
    start: 00:00
    stop: 00:59

- name: weekly
  type: time
  icon: clock
  source:
    interval: 24h
    start: 01:00
    stop: 01:59
    days:
      - Monday

- name: env
  type: pcf-pool
  icon: sheep
  source:
    url: https://v2.shepherd.run
    service-account-key: ((shepherd-service-account-key))
    lease:
      namespace: tas-runtime
      pool:
        namespace: official
        name: cfd
    compatibility-mode: environments-app

- name: github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    repository: mapfs-release
    owner: cloudfoundry

- name: draft-github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    drafts: true
    owner: cloudfoundry
    repository: mapfs-release

- name: shared-templates
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths:
      - shared/github

- name: version
  type: semver
  icon: counter
  source:
    access_key_id: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
    bucket: mapfs-versions
    initial_version: 1.2.4
    key: current-version
    region_name: us-east-1
    secret_access_key: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
    assume_role_arn: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))

- name: env-lock
  type: pool
  icon: cloud-lock
  source:
    branch: main
    pool: mapfs-release-env-lock
    private_key: ((github-tas-runtime-bot/private-key))
    uri: git@github.com:/cloudfoundry/runtime-ci-pools.git

- name: image
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/cloudfoundry/tas-runtime-build
    tag: 'latest'
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

- name: libfuse-git-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    repository: libfuse
    user: libfuse
    tag_filter: "fuse-(.*)"

- name: meson-git-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    repository: meson
    user: mesonbuild
    tag_filter: "^([0-9].*)"

- name: ninja-git-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    repository: ninja
    user: ninja-build
    tag_filter: "^v(.*)"

jobs:
- name: sync-readme
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: image
      - get:  repo
      - get: daily-at-midnight
        trigger: true
      - get: repo-readme
        trigger: false
  - do:
    - task: sync-readme
      file: ci/shared/tasks/sync-readme/linux.yml
      image: image
    - put: repo
      params:
       rebase: true
       repository: synced-repo

- name: sync-dot-github-dir
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: image
      - get:  repo
      - get: shared-templates
        trigger: true
  - do:
    - task: sync-dot-github-dir
      file: ci/shared/tasks/sync-dot-github-dir/linux.yml
      image: image
      params:
        PARENT_TEMPLATE_DIR: mapfs-release
    - put: repo
      params:
       rebase: true
       repository: synced-repo

- name: bump-dependencies-go-mod
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
      - get: image
      - get: weekly
        trigger: true
  - do:
    - task: mapfs-release-bump-dependencies-go-mod
      image: image
      file: ci/shared/tasks/bump-dependencies-go-mod/linux.yml
      params:
        GO_MODS: |
          src/code.cloudfoundry.org/mapfs/go.mod
    - put: repo
      params:
        rebase: true
        repository: bumped-repo

- name: bump-golang
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
      - get: image
      - get: go-version
        trigger: true
      - get: golang-release-latest
        trigger: true

  - task: bump-golang-package-name
    image: image
    file: ci/shared/tasks/bump-golang-package-name/linux.yml
    params:
      PLATFORM: linux

  - task: bump-golang-linux
    file: ci/shared/tasks/bosh-vendor-package/linux.yml
    image: image
    input_mapping:
      repo: bumped-repo
      package-release: golang-release-latest
    params:
      PACKAGE_NAME: golang-*-linux
      AWS_ACCESS_KEY_ID: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
      AWS_ASSUME_ROLE_ARN: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))
  - put: repo
    params:
      rebase: true
      repository: vendored-repo

- name: unit-and-integration-tests
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
        trigger: true
      - get: image
      - get: package-release
        resource: golang-release-latest
  - task: determine-image-tag
    image: image
    file: ci/shared/tasks/determine-image-tag/linux.yml
  - load_var: image_tag
    file: determined-image-tag/tag
  - in_parallel:
      steps:
#@ for repo in data.values.internal_repos:
      - task: #@ "{}".format(repo.name)
        file: ci/shared/tasks/run-bin-test/linux.yml
        privileged: true
        vars:
          image_repository: cloudfoundry/tas-runtime-build
          image_password: ((gcp-tas-runtime-service-account/config-json))
          image_tag: ((.:image_tag))
        params:
          DIR: #@ "src/code.cloudfoundry.org/{}".format(repo.name)
#@ end

- name: bump-bosh-blobs
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: meson-git-release
        trigger: true
      - get: ninja-git-release
        trigger: true
        params:
          include_source_tarball: true
      - get: libfuse-git-release
        trigger: true
      - get: repo
      - get: image
  - do:
    - task: bump-bosh-blob-meson
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: meson-git-release
      params:
        BOSH_BLOB_PATH: build-deps/meson-*.tar.gz
        AWS_ACCESS_KEY_ID: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-ninja
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: ninja-git-release
      params:
        BOSH_BLOB_PATH: build-deps/ninja-*.tar.gz
        AWS_ACCESS_KEY_ID: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-libfuse
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: libfuse-git-release
      params:
        BOSH_BLOB_PATH: fuse/fuse-*.tar.gz
        AWS_ACCESS_KEY_ID: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo

- name: lint-repo
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
        trigger: true
      - get: image
  - task: lint-repo
    file: ci/shared/tasks/lint-repo/linux.yml
    image: image

- name: claim-env
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: ci
      - get: image
      - get: repo
        trigger: true
        passed:
        - unit-and-integration-tests
        - lint-repo
      - put: env-lock
        params:
          acquire: true
  - put: env
    params:
      action: create
      duration: 48h
      resource: env
      description: mapfs pipeline
    timeout: 6h
  - task: wait-for-cf-api
    file: ci/shared/tasks/wait-for-cf-api/linux.yml
    input_mapping:
      toolsmiths-env: env
    image: image

- name: prepare-env
  public: true
  build_logs_to_retain: 100
  max_in_flight: 1
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: env
        passed: [ claim-env ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: image
      - get: cf-deployment
      - get: ci
      - get: repo
        trigger: true
        passed: [ claim-env ]
  - task: prepare-cf-deployment-env
    image: image
    file: ci/shared/tasks/run-bin-prepare-cf-deployment-env/linux.yml
  - task: combine-ops-files
    file: ci/shared/tasks/combine-assets/linux.yml
    image: image
    input_mapping:
      input-01: cf-deployment
    params:
      COPY_ACTIONS: |
        {input-01/operations/use-compiled-releases.yml,combined-assets}
        {input-01/operations/scale-to-one-az.yml,combined-assets}
        {input-01/operations/enable-nfs-volume-service.yml,combined-assets}
        {input-01/operations/backup-and-restore/enable-backup-restore.yml,combined-assets}
        {input-01/operations/backup-and-restore/enable-restore-nfs-broker.yml,combined-assets}
        {input-01/operations/test/enable-nfs-test-server.yml,combined-assets}
        {input-01/operations/experimental/fast-deploy-with-downtime-and-danger.yml,combined-assets}
        {ci/shared/opsfiles/scale-for-cats.yml,combined-assets}
        {ci/shared/opsfiles/add-lb-ca-cert.yml,combined-assets}
  - task: deploy-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      ops-files: combined-assets
      release: repo
      vars-files: prepared-env
      toolsmiths-env: env
    params:
      DEPLOY_WITH_UPTIME_MEASUREMENTS: "false"
      FAIL_ON_DOWNTIME: "false"
      VARS_FILES: vars.yml
      OPS_FILES: #@ "\n".join(data.values.opsfiles)
  - in_parallel:
    - task: open-asg-for-credhub
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        toolsmiths-env: env
      params:
        INSTANCE_GROUP_NAME: credhub
        SECURITY_GROUP_NAME: credhub
    - task: open-asg-for-uaa
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        toolsmiths-env: env
      params:
        INSTANCE_GROUP_NAME: uaa
        SECURITY_GROUP_NAME: uaa
    - task: open-asg-for-nfstestserver
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        toolsmiths-env: env
      params:
        INSTANCE_GROUP_NAME: nfstestserver
        SECURITY_GROUP_NAME: nfstestserver
    - task: enable-feature-flags-for-cats
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        toolsmiths-env: env
      params:
        ENABLED_FEATURE_FLAGS: diego_docker service_instance_sharing
    - task: run-nfs-broker-errand
      image: image
      attempts: 2
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      input_mapping:
        toolsmiths-env: env
      params:
        ERRAND_NAME: nfsbrokerpush
        INSTANCE: nfs-broker-push

- name: run-cats
  serial_groups:
  - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: env
        passed: [ prepare-env ]
        trigger: true
      - get: ci
      - get: cf-acceptance-tests
      - get: cf-deployment-concourse-tasks
      - get: image
      - get: repo
        passed: [ prepare-env ]
  - task: create-cats-config
    image: image
    file: ci/shared/tasks/build-acceptance-test-configs/linux.yml
    params:
      ENVS: |
        VOLUME_SERVICE_SERVICE_NAME=nfs
        VOLUME_SERVICE_PLAN_NAME=Existing
        VOLUME_SERVICE_BROKER_NAME=nfsbroker
        VOLUME_SERVICE_CREATE_CONFIG='{\"share\": \"nfstestserver.service.cf.internal/export/users\"}'
        VOLUME_SERVICE_BIND_CONFIG='{\"uid\":\"1000\",\"gid\":\"1000\"}'
      CONFIGS: cats
      WITH_VOLUME_SERVICES: true
      WITH_ISOSEG: false
      WITH_DYNAMIC_ASG: false
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    attempts: 2
    input_mapping:
      integration-config: built-acceptance-test-configs
    params:
      CONFIG_FILE_PATH: cats.json

- name: volume-services-acceptance-tests
  serial_groups:
  - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: ci
      - get: image
      - get: env
        passed: [ prepare-env ]
        trigger: true
      - get: repo
        passed: [ prepare-env ]
        trigger: true
      - get: package-release
        resource: golang-release-latest
  - task: determine-image-tag
    image: image
    file: ci/shared/tasks/determine-image-tag/linux.yml
  - load_var: image_tag
    file: determined-image-tag/tag
  - task: generate-pats-config-nfs
    image: image
    file: ci/shared/tasks/build-acceptance-test-configs/linux.yml
    params:
      CONFIGS: volume-services-acceptance-tests
      ENVS: |
        VOLUME_SERVICE_SERVICE_NAME=nfs
        VOLUME_SERVICE_BROKER_NAME=nfsbroker
        VOLUME_SERVICE_PLAN_NAME=Existing
  - task: run-bin-test-cf-volume-services-acceptance-tests
    file: ci/shared/tasks/run-bin-test/linux.yml
    input_mapping:
      repo: cf-volume-services-acceptance-tests
      input-01: built-acceptance-test-configs
    attempts: 2
    vars:
      image_repository: cloudfoundry/tas-runtime-build
      image_password: ((gcp-tas-runtime-service-account/config-json))
      image_tag: ((.:image_tag))
    params:
      ENVS: |
        CONFIG=$PWD/input-01/volume-services-acceptance-tests.json

- name: export-release
  serial: true
  serial_groups: [acceptance-tests]
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
        passed: [prepare-env]
        trigger: true
      - get: image
      - get: env
        passed: [prepare-env]
        trigger: true
      - get: cf-deployment-concourse-tasks
  - task: export-release
    file: ci/shared/tasks/bosh-export-release/linux.yml
    image: image

- name: ship-what
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          passed:
            - run-cats
            - volume-services-acceptance-tests
            - export-release
          trigger: true
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: env
          passed:
            - volume-services-acceptance-tests
            - run-cats
            - export-release
          trigger: true

    - task: check-safe-to-release-repo
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: build-release-notes-mapfs-release
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release

- name: ship-it
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: ci
      - get: repo
        passed: [ship-what]
      - get: image
      - get: release-branch
        params:
          submodules: none
      - get: github-release
      - get: version
      - get: develop-branch-mergeback
        params:
          submodules: none

  - task: check-safe-to-release-branch
    image: image
    file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
    input_mapping:
      release-repo: release-branch

  - task: build-release-notes-mapfs-release
    image: image
    file: ci/shared/tasks/build-release-notes/linux.yml
    input_mapping:
      previous-github-release: github-release

  - task: bosh-finalize-release
    image: image
    file: ci/shared/tasks/bosh-finalize-release/linux.yml
    params:
      AWS_SECRET_ACCESS_KEY: ((aws-s3-107350105730-mapfs-volume-services-s3/secret-access-key))
      AWS_ACCESS_KEY_ID: ((aws-s3-107350105730-mapfs-volume-services-s3/access-key-id))
      AWS_ASSUME_ROLE_ARN: ((aws-s3-107350105730-mapfs-volume-services-s3/assume-role))

  - put: release-branch
    params:
      repository: finalized-release-repo
      tag: version/number
      tag_prefix: v

  - task: merge-release-onto-develop
    image: image
    file: ci/shared/tasks/git-merge-branches/linux.yml
    input_mapping:
      source-branch: release-branch
      onto-branch: develop-branch-mergeback
    params:
      SOURCE_BRANCH_NAME: release
      ONTO_BRANCH_NAME: develop

  - in_parallel:
      steps:
      - put: draft-github-release
        params:
          name: version/number
          tag: version/number
          body: built-release-notes/notes.md
          tag_prefix: v
          globs:
          - finalized-release-tarball/mapfs-*.tgz
      - put: develop-branch-mergeback
        params:
          repository: merged-branch
          merge: true

  - get: next-version
    resource: version
    params: {bump: minor}
  - put: next-version
    params:
      file: next-version/number
    resource: version

- name: unclaim-env
  plan:
  - get: env
    passed:
    - run-cats
    - export-release
    - volume-services-acceptance-tests
    trigger: true
  - get: env-lock
  - put: env
    params:
      action: release
      resource: env
  - put: env-lock
    params:
      release: env-lock

- name: release-env-lock
  plan:
  - get: env-lock
  - try:
      do:
      - get: env
        passed: [claim-env]
      - put: env
        params:
          action: release
          resource: env
  ensure:
    put: env-lock
    params:
      release: env-lock #! path to the resource in the above get

- name: patch-bump
  plan:
  - get: version
    params:
      bump: final
  - put: version
    params:
      bump: patch

- name: minor-bump
  plan:
  - get: version
    params:
      bump: final
  - put: version
    params:
      bump: minor

- name: manual-bump-mapfs-major
  plan:
  - get: version
    params:
      bump: final
  - put: version
    params:
      bump: major
