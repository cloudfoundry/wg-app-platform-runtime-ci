---
jobs:

- name: diego-inigo-ci-rootfs
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: http-golang-download
      trigger: true
    - get: diego-inigo-ci-rootfs-dockerfile
      trigger: true
    - get: image
    - get: go-version
      trigger: true
  - put: diego-inigo-ci-rootfs
    params:
      build: diego-inigo-ci-rootfs-dockerfile/diego-release/dockerfiles/diego-inigo-ci-rootfs
      tag_as_latest: true
  - task: validate-label-urls
    file: ci/shared/tasks/lint-docker-image/linux.yml
    image: image
    input_mapping:
      docker-image: diego-inigo-ci-rootfs

- name: diego-docker-app
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: http-golang-download
      trigger: true
    - get: diego-docker-app-dockerfile
      trigger: true
    - get: image
    - get: go-version
      trigger: true
  - in_parallel:
    - put: diego-docker-app
      params:
        build: diego-docker-app-dockerfile/diego-release/dockerfiles/diego-docker-app
        tag_as_latest: true
    - put: aws-ecr-docker-app
      params:
        build: diego-docker-app-dockerfile/diego-release/dockerfiles/diego-docker-app
        tag_as_latest: true
  - task: validate-label-urls
    file: ci/shared/tasks/lint-docker-image/linux.yml
    image: image
    input_mapping:
      docker-image: diego-docker-app

- name: diego-oci-app
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: http-golang-download
      trigger: true
    - get: diego-docker-app-dockerfile
      trigger: true
    - get: image
    - get: docker-buildx
      params:
        globs:
          - "*linux-amd64"
    - get: oras-cli
      params:
        globs:
          - "*_linux_amd64.tar.gz"
    - get: go-version
      trigger: true
  - task: build-oci-image
    file: ci/diego-release/tasks/create-oci-image/linux.yml
    image: image
    privileged: true
    input_mapping:
      dockerfile: diego-docker-app-dockerfile
    params:
      DOCKERFILE_PATH: dockerfile/diego-release/dockerfiles/diego-docker-app
      DOCKERHUB_USERNAME: ((dockerhub-tasruntime-username))
      DOCKERHUB_PASSWORD: ((dockerhub-tasruntime-password))

  # - task: validate-label-urls
  #   file: ci/shared/tasks/lint-docker-image/linux.yml
  #   image: image
  #   input_mapping:
  #     docker-image: diego-docker-app

- name: grace
  serial: true
  plan:
  - in_parallel:
    - get: http-golang-download
      trigger: true
    - get: grace
    - get: ci
    - get: image
    - get: go-version
      trigger: true
  - task: print-go-version-tag
    image: image
    file: ci/shared/tasks/build-golang-version-tags/linux.yml
    params:
      IMAGE: tas-runtime-build
    output_mapping:
      tag_file: tag
  - task: release-binaries
    file: ci/shared/tasks/run-bin-release-binaries/linux.yml
    image: image
    input_mapping:
      repo: grace
      version: tag
  - put: cloudfoundry-grace-docker
    params:
      build: released-binaries/docker
      tag_as_latest: true
      additional_tags: tag/tag
  - task: validate-label-urls
    file: ci/shared/tasks/lint-docker-image/linux.yml
    image: image
    input_mapping:
      docker-image: cloudfoundry-grace-docker
  - put: cloudfoundry-grace-gcs
    params:
      file: released-binaries/grace-*.tgz
      predefined_acl: publicRead

resources:
- name: diego-inigo-ci-rootfs-dockerfile
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/wg-app-platform-runtime-ci.git
    branch: main
    private_key: ((github-tas-runtime-bot/private-key))
    paths:
    - diego-release/dockerfiles/diego-inigo-ci-rootfs/Dockerfile

- name: oras-cli
  type: github-release
  icon: github
  check_every: '24h'
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    owner: oras-project
    repository: oras

- name: docker-buildx
  type: github-release
  icon: github
  check_every: '24h'
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    owner: docker
    repository: buildx

- name: diego-docker-app-dockerfile
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/wg-app-platform-runtime-ci.git
    branch: main
    private_key: ((github-tas-runtime-bot/private-key))
    paths:
    - diego-release/dockerfiles/diego-docker-app/Dockerfile
    - diego-release/dockerfiles/diego-docker-app/dockerapp.go

- name: grace
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/grace.git
    branch: main
    private_key: ((github-tas-runtime-bot/private-key))

- name: diego-docker-app
  type: docker-image
  icon: docker
  source:
    username: ((dockerhub-tasruntime-username))
    password: ((dockerhub-tasruntime-password))
    repository: cloudfoundry/diego-docker-app

- name: aws-ecr-docker-app
  type: docker-image
  icon: docker
  source:
    aws_access_key_id: ((aws-ecr-diego-docker-app/access-key-id))
    aws_secret_access_key: ((aws-ecr-diego-docker-app/secret-access-key))
    repository: ((aws-ecr-diego-docker-app/ref))

- name: diego-inigo-ci-rootfs
  type: docker-image
  icon: docker
  source:
    username: ((dockerhub-tasruntime-username))
    password: ((dockerhub-tasruntime-password))
    repository: cloudfoundry/diego-inigo-ci-rootfs

- name: cloudfoundry-grace-docker
  type: docker-image
  icon: docker
  source:
    username: ((dockerhub-tasruntime-username))
    password: ((dockerhub-tasruntime-password))
    repository: cloudfoundry/grace

- name: image
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/cloudfoundry/tas-runtime-build
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

- name: cloudfoundry-grace-gcs
  type: google-cloud-storage
  icon: bitbucket
  source:
    bucket: grace-assets
    regexp: grace-*.tgz
    json_key: ((gcp-tas-runtime-service-account/config-json))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: git@github.com:cloudfoundry/wg-app-platform-runtime-ci
    private_key: ((github-tas-runtime-bot/private-key))

- name: go-version
  type: git
  icon: source-branch
  source:
    branch: main
    uri: git@github.com:cloudfoundry/wg-app-platform-runtime-ci
    private_key: ((github-tas-runtime-bot/private-key))
    paths:
    - go-version.json

- name: http-golang-download
  type: command-runner
  icon: link-variant
  source:
    version_key: "latest-golang"
    check_command: "echo https://dl.google.com/go/$(curl -s https://go.dev/dl/?mode=json | grep -o 'go.*.linux-amd64.tar.gz' | head -n 1 | tr -d '\r\n')"
    in_command:    "curl --silent --fail --output $1/golang.tgz https://dl.google.com/go/$(curl -s https://go.dev/dl/?mode=json | grep -o 'go.*.linux-amd64.tar.gz' | head -n 1 | tr -d '\r\n')"

resource_types:
- name: google-cloud-storage
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/frodenas/gcs-resource
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))
- name: command-runner
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/cloudfoundrydevelopers/command-runner-resource
    tag: latest
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))
