#@ load("@ytt:data", "data")
#@ load("ytt-helpers.star", "helpers")

#! Define-Groups
groups:
- name: release
  jobs:
  - unit-tests
  - claim-env
  - prepare-env
  - run-integration-tests
  - run-e2e-tests
  - ship-what
  - ship-it
  - unclaim-env

- name: periodics
  jobs:
  - bump-dependencies-go-mod

- name: manual
  jobs:
  - release-env-lock

- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump


#! Define-ResourceGroups
resource_types:
- name: shepherd
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
    tag: v1  #! This may be bumped in the future

- name: cogito
  type: registry-image
  check_every: 168h
  source:
    repository: pix4d/cogito

#! Define-Resources
resources:
- name: repo
  type: git
  icon: source-branch
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cpu-entitlement-plugin
    private_key: ((github-tas-runtime-bot/private-key))

- name: test-log-emitter-release
  type: git
  icon: source-branch
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/test-log-emitter-release.git
    private_key: ((github-tas-runtime-bot/private-key))

- name: release-branch
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/cpu-entitlement-plugin
    branch: release
    private_key: ((github-tas-runtime-bot/private-key))

- name: develop-branch-mergeback
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/cpu-entitlement-plugin
    branch: develop
    private_key: ((github-tas-runtime-bot/private-key))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci

- name: cf-deployment
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

#! TIMERS
- name: daily
  type: time
  icon: clock
  source:
    interval: '24h'  #! 1 daily

- name: env
  type: shepherd
  icon: sheep
  source:
    url: https://v2.shepherd.run
    service-account-key: ((shepherd-service-account-key))
    lease:
      namespace: tas-runtime
      pool:
        namespace: official
        name: cfd
    compatibility-mode: environments-app

- name: github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    repository: cpu-entitlement-plugin
    owner: cloudfoundry

- name: draft-github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-tas-runtime-bot/access-token))
    drafts: true
    repository: cpu-entitlement-plugin
    owner: cloudfoundry

- name: version
  type: semver
  icon: counter
  source:
    driver: gcs
    bucket: ci-release-versions
    key: cpu-entitlement-plugin/version
    json_key: ((gcp-tas-runtime-service-account/config-json))

- name: env-lock
  type: pool
  icon: cloud-lock
  source:
    branch: main
    pool: cpu-entitlement-plugin-env-lock
    private_key: ((github-tas-runtime-bot/private-key))
    uri: git@github.com:cloudfoundry/runtime-ci-pools.git

- name: image
  type: docker-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/cloudfoundry/tas-runtime-build
    tag: 'latest'
    username: _json_key
    password: ((gcp-tas-runtime-service-account/config-json))

- name: chat-notify
  type: cogito
  check_every: never
  source:
    sinks:
      - gchat
    gchat_webhook: ((concourse-google-chat-webhook/concourse-webhook))

meta:
  gchat_notification: &gchat_notification
    on_failure:
      put: chat-notify
      inputs:
        - repo
      params:
        state: failure
    on_error:
      put: chat-notify
      inputs:
        - repo
      params:
        state: error

#! Define-Jobs
jobs:
- name: bump-dependencies-go-mod
  serial: true
  <<: *gchat_notification
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
      - get: image
      - get: daily
        trigger: true
  - task: cpu-entitlement-plugin-bump-dependencies-go-mod
    image: image
    file: ci/shared/tasks/bump-dependencies-go-mod/linux.yml
    params:
      GO_MODS: go.mod
  - put: repo
    params:
      rebase: true
      repository: bumped-repo

- name: unit-tests
  serial: true
  <<: *gchat_notification
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
    - get: image
  - task: determine-image-tag
    file: ci/shared/tasks/determine-image-tag/linux.yml
    image: image
    params:
      PLUGIN: cpu-entitlement-plugin
  - load_var: image_tag
    file: determined-image-tag/tag
  - in_parallel:
    - task: cpu-entitlement-plugin
      file: ci/shared/tasks/run-bin-test/linux.yml
      vars:
        image_repository: cloudfoundry/tas-runtime-build
        image_tag: ((.:image_tag))

- name: claim-env
  serial: true
  <<: *gchat_notification
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
      passed:
        - unit-tests
    - get: image

    - put: env-lock
      params:
        acquire: true
  - put: env
    params:
      action: create
      duration: 176h
      resource: env
      description: "cpu-entitlement-plugin pipeline"
    timeout: 6h
  - task: wait-for-cf-api
    file: ci/shared/tasks/wait-for-cf-api/linux.yml
    input_mapping:
      toolsmiths-env: env
    image: image

- name: prepare-env
  serial: true
  <<: *gchat_notification
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
      passed: [claim-env]
    - get: test-log-emitter-release
    - get: image
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: env
      passed: [claim-env]
      trigger: true
  - task: prepare-cf-deployment-env
    image: image
    file: ci/shared/tasks/run-bin-prepare-cf-deployment-env/linux.yml
  - task: combine-ops-files
    file: ci/shared/tasks/combine-assets/linux.yml
    image: image
    input_mapping:
      input-01: cf-deployment
    params:
      COPY_ACTIONS: |
        {input-01/operations/experimental/set-cpu-weight.yml,combined-assets/}
        {ci/cpu-entitlement-plugin/opsfiles/*.yml,combined-assets/}
  - task: deploy-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      ops-files: combined-assets
      vars-files: prepared-env
      toolsmiths-env: env
      release: test-log-emitter-release
    params:
      DEPLOY_WITH_UPTIME_MEASUREMENTS: "false"
      FAIL_ON_DOWNTIME: "false"
      VARS_FILES: vars.yml
      OPS_FILES: #@ "\n".join(data.values.opsfiles)

- name: run-integration-tests
  serial: true
  serial_groups: [acceptance]
  <<: *gchat_notification
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      passed: [prepare-env]
      trigger: true
    - get: image
    - get: env
      passed: [prepare-env]
      trigger: true
  - task: determine-image-tag
    file: ci/shared/tasks/determine-image-tag/linux.yml
    image: image
    params:
      PLUGIN: cpu-entitlement-plugin
  - load_var: image_tag
    file: determined-image-tag/tag
  - task: create-cpu-entitlement-config-config
    image: image
    file: ci/shared/tasks/build-acceptance-test-configs/linux.yml
    params:
      CONFIGS: cpu-entitlement-plugin
  - task: integration-tests
    file: ci/shared/tasks/run-bin-test/linux.yml
    input_mapping:
      input-01: built-acceptance-test-configs
    params:
      DIR: integration
      ENVS: "CONFIG=$PWD/input-01/cpu-entitlement-plugin.json"
      FLAGS: |
        --randomize-all
        --race
        --keep-going
    vars:
      image_repository: cloudfoundry/tas-runtime-build
      image_tag: ((.:image_tag))

- name: run-e2e-tests
  serial: true
  serial_groups: [acceptance]
  <<: *gchat_notification
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      passed: [prepare-env]
      trigger: true
    - get: image
    - get: env
      passed: [prepare-env]
      trigger: true
  - task: determine-image-tag
    file: ci/shared/tasks/determine-image-tag/linux.yml
    image: image
    params:
      PLUGIN: cpu-entitlement-plugin
  - load_var: image_tag
    file: determined-image-tag/tag
  - task: build-binaries
    file: ci/shared/tasks/build-binaries/linux.yml
    params:
      DEFAULT_PARAMS: "ci/cpu-entitlement-plugin/default-params/build-binaries/linux.yml"
    vars:
      image_repository: cloudfoundry/tas-runtime-build
      image_tag: ((.:image_tag))
  - task: create-cpu-entitlement-config-config
    image: image
    file: ci/shared/tasks/build-acceptance-test-configs/linux.yml
    params:
      CONFIGS: cpu-entitlement-plugin
  - task: e2e-tests
    file: ci/shared/tasks/run-bin-test/linux.yml
    input_mapping:
      input-01: built-acceptance-test-configs
    params:
      DIR: e2e
      ENVS: "CONFIG=$PWD/input-01/cpu-entitlement-plugin.json"
      DEFAULT_PARAMS: "ci/cpu-entitlement-plugin/default-params/run-bin-test/linux.yml"
      FLAGS: |
        --randomize-all
        --race
        --keep-going
    vars:
      image_repository: cloudfoundry/tas-runtime-build
      image_tag: ((.:image_tag))

- name: ship-what
  <<: *gchat_notification
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          passed:
            - run-integration-tests
            - run-e2e-tests
          trigger: true
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: env
          passed:
            - run-integration-tests
            - run-e2e-tests
          trigger: true

    - task: check-safe-to-release-repo
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: release-binaries
      file: ci/shared/tasks/run-bin-release-binaries/linux.yml
      image: image
      params:
        OS: |
          linux
          windows
          darwin
        ARCH: |
          amd64
          386

    - task: build-release-notes-cpu-entitlement-plugin
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release

- name: ship-it
  serial: true
  <<: *gchat_notification
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          passed: [ ship-what ]
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: develop-branch-mergeback
          params:
            submodules: none

    - task: check-safe-to-release-branch
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: release-binaries
      file: ci/shared/tasks/run-bin-release-binaries/linux.yml
      image: image
      params:
        OS: |
          linux
          windows
          darwin
        ARCH: |
          amd64
          386

    - task: build-release-notes-cpu-entitlement-plugin
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release

    - put: release-branch
      params:
        repository: repo
        tag: version/number
        tag_prefix: v

    - task: merge-release-onto-develop
      image: image
      file: ci/shared/tasks/git-merge-branches/linux.yml
      input_mapping:
        source-branch: release-branch
        onto-branch: develop-branch-mergeback
      params:
        SOURCE_BRANCH_NAME: release
        ONTO_BRANCH_NAME: develop

    - in_parallel:
        steps:
        - put: draft-github-release
          params:
            name: version/number
            tag: version/number
            tag_prefix: v
            body: built-release-notes/notes.md
            globs:
            - released-binaries/*
        - put: develop-branch-mergeback
          params:
            repository: merged-branch

    - get: next-version
      resource: version
      params: {bump: minor}
    - put: next-version
      resource: version
      params: {file: next-version/number}

- name: unclaim-env
  serial: true
  <<: *gchat_notification
  plan:
  - get: env
    passed: [ship-what]
    trigger: true
  - get: env-lock
  - put: env
    params:
      action: release
      resource: env
  - params:
      release: env-lock #! path to the resource in the above get
    put: env-lock

- name: release-env-lock
  <<: *gchat_notification
  plan:
  - get: env-lock
  ensure:
    put: env-lock
    params:
      release: env-lock #! path to the resource in the above get

#! versioning
- name: patch-bump
  serial_groups: [version]
  <<: *gchat_notification
  plan:
  - get: version
    params: {bump: patch}
  - put: version
    params: {file: version/number}

- name: minor-bump
  serial_groups: [version]
  <<: *gchat_notification
  plan:
  - get: version
    params: {bump: minor}
  - put: version
    params: {file: version/number}

- name: major-bump
  serial_groups: [version]
  <<: *gchat_notification
  plan:
  - get: version
    params: {bump: major}
  - put: version
    params: {file: version/number}
