#@ load("@ytt:data", "data")
#@ load("ytt-helpers.star", "helpers")

#! Define-Groups
groups:
- name: release
  jobs:
  - ship-what
  - ship-it

- name: periodics
  jobs:
  - bump-package-golang
  - bump-bosh-blobs

resource_types:
- name: command-runner
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundrydevelopers/command-runner-resource
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

- name: slack-notification
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cfcommunity/slack-notification-resource
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

#! Define-Resources
resources:
- name: golang-release-latest
  type: git
  icon: tag-outline
  source:
    tag_filter: v*
    uri: https://github.com/bosh-packages/golang-release.git

- name: repo
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/windows-tools-release.git
    branch: develop
    private_key: ((github-appruntimeplatform-bot/private-key))
    ignore_paths:
    - .github/
    - .gitignore
    - .final_builds/
    - CODEOWNERS
    - LICENSE
    - NOTICE
    - README.md
    - docs/
    - releases/

- name: release-branch
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/windows-tools-release.git
    branch: release
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: develop-branch-mergeback
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/windows-tools-release.git
    branch: develop
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci

- name: github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-appruntimeplatform-bot/access-token))
    repository: windows-tools-release
    owner: cloudfoundry

- name: draft-github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-appruntimeplatform-bot/access-token))
    drafts: true
    repository: windows-tools-release
    owner: cloudfoundry

- name: version
  type: semver
  icon: counter
  source:
    driver: gcs
    bucket: ci-release-versions
    key: windows-tools-release/version
    json_key: ((gcp-wg-arp-oss-service-account/config-json))

- name: go-version
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths: [go-version.json]

- name: image
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundry/tas-runtime-build
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: 'latest'

- name: yq
  type: github-release
  icon: github
  source:
    owner: mikefarah
    repository: yq
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: staticcheck
  type: github-release
  icon: github
  source:
    owner: dominikh
    repository: go-tools
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: mingw
  type: github-release
  icon: github
  source:
    owner: niXman
    repository: mingw-builds-binaries
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: bosh-cli
  type: github-release
  icon: github
  source:
    owner: cloudfoundry
    repository: bosh-cli
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: git-cli
  type: github-release
  icon: github
  source:
    owner: git-for-windows
    repository: git
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: vcredist-ucrt
  type: command-runner
  icon: link-variant
  source:
    version_key: "url"
    check_command: "curl --location --silent --write-out %{url_effective} --request HEAD https://aka.ms/vs/17/release/vc_redist.x64.exe"
    in_command:    "curl --location --silent --fail --output $1/vcredist-ucrt.x64.exe https://aka.ms/vs/17/release/vc_redist.x64.exe"

- name: cmake
  type: github-release
  icon: github
  source:
    owner: Kitware
    repository: CMake
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: ginkgo
  type: github-release
  icon: github
  source:
    owner: onsi
    repository: ginkgo
    access_token: ((github-appruntimeplatform-bot/access-token))

- name: slack-ci-channel
  type: slack-notification
  source:
    url: ((slack-ci-channel/webhook))

#! Define-Jobs
jobs:
- name: bump-package-golang
  on_failure: &ci-notification
    put: slack-ci-channel
    params:
      text: ":concourse-failed: $BUILD_PIPELINE_NAME failed on <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME>."
  plan:
  - in_parallel:
    - get: ci
    - get: repo
    - get: image
    - get: go-version
      trigger: true
    - get: golang-release-latest
      trigger: true

  - task: bump-golang-package-name
    image: image
    file: ci/shared/tasks/bump-golang-package-name/linux.yml
    params:
      PLATFORM: windows

  - task: bump-golang-windows
    file: ci/shared/tasks/bosh-vendor-package/linux.yml
    image: image
    input_mapping:
      repo: bumped-repo
      package-release: golang-release-latest
    params:
      PACKAGE_NAME: golang-*-windows
      AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
      AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))

  - put: repo
    params:
      rebase: true
      repository: vendored-repo

- name: bump-bosh-blobs
  serial: true
  on_failure: *ci-notification
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
      - get: image
      - get: yq
        params:
          globs:
          - yq_windows_amd64.exe 
        trigger: true
      - get: staticcheck
        params:
          globs:
          - staticcheck_windows_amd64.tar.gz
        trigger: true
      - get: mingw
        params:
          globs:
          - x86_64-*-release-posix-seh-ucrt-*.7z
          - i686-*-release-win32-dwarf-ucrt-*.7z
        trigger: true
      - get: bosh-cli
        params:
          globs:
          - bosh-cli-*-windows-amd64.exe
        trigger: true
      - get: git-cli
        params:
          globs:
          - Git-*-64-bit.exe
        trigger: true
      - get: vcredist-ucrt
        trigger: true
      - get: cmake
        params:
          globs:
          - cmake-*-windows-x86_64.zip 
        trigger: true
      - get: ginkgo
        trigger: true
  - do:
    - task: bump-bosh-blob-yq
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: yq
      params:
        BOSH_BLOB_PATH: yq/yq-*-windows-amd64.exe 
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-staticcheck
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: staticcheck
      params:
        BOSH_BLOB_PATH: staticcheck/staticcheck-*-windows-amd64.tar.gz
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-mingw-x64
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: mingw
      params:
        BOSH_BLOB_PATH: mingw/x86_64-*-release-posix-seh-ucrt-*-*.7z
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-mingw-i686
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: mingw
      params:
        BOSH_BLOB_PATH: mingw/i686-*-release-win32-dwarf-ucrt-*-*.7z
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-bosh-cli
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: bosh-cli
      params:
        BOSH_BLOB_PATH: bosh-cli/bosh-cli-*-windows-amd64.exe
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-git-cli
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: git-cli
      params:
        BOSH_BLOB_PATH: git/Git-*-64-bit.exe
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-vcredist-ucrt
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: vcredist-ucrt
      params:
        BOSH_BLOB_PATH: vc_redist/vc_redist-*.zip
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-cmake
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: cmake
      params:
        BOSH_BLOB_PATH: cmake/cmake-*-windows-x86_64.zip
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo
  - do:
    - task: bump-bosh-blob-ginkgo
      image: image
      file: ci/shared/tasks/bump-bosh-blobs/linux.yml
      input_mapping:
        blob: ginkgo
      params:
        BOSH_BLOB_PATH: ginkgo/ginkgo-*.exe
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))
    - put: repo
      params:
       rebase: true
       repository: bumped-repo

- name: ship-what
  on_success:
    put: slack-ci-channel
    params:
      text: ":concourse-succeeded: $BUILD_PIPELINE_NAME ship-what just ran. Maybe you should cut a release? $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME"
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          trigger: true
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version

    - task: check-safe-to-release-repo
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: build-release-notes-windows-tools-release
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release
      params:
        BOSH_IO_ORG: cloudfoundry-incubator

- name: ship-it
  serial: true
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          passed: [ ship-what ]
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: develop-branch-mergeback
          params:
            submodules: none

    - task: check-safe-to-release-branch
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: build-release-notes-windows-tools-release
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release
      params:
        BOSH_IO_ORG: cloudfoundry-incubator

    - task: bosh-finalize-release
      image: image
      file: ci/shared/tasks/bosh-finalize-release/linux.yml
      params:
        AWS_ACCESS_KEY_ID: ((aws-s3-svc-gdn-win-bosh-s3/access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-s3-svc-gdn-win-bosh-s3/secret-access-key))
        AWS_ASSUME_ROLE_ARN: ((aws-s3-svc-gdn-win-bosh-s3/assume-role))

    - put: release-branch
      params:
        repository: finalized-release-repo
        tag: version/number
        tag_prefix: v

    - task: merge-release-onto-develop
      image: image
      file: ci/shared/tasks/git-merge-branches/linux.yml
      input_mapping:
        source-branch: release-branch
        onto-branch: develop-branch-mergeback
      params:
        SOURCE_BRANCH_NAME:  release
        ONTO_BRANCH_NAME: develop

    - in_parallel:
        steps:
        - put: draft-github-release
          params:
            name: version/number
            tag: version/number
            tag_prefix: v
            body: built-release-notes/notes.md
            globs:
            - finalized-release-tarball/windows-tools-*.tgz
        - put: develop-branch-mergeback
          params:
            repository: merged-branch
            merge: true

    - get: next-version
      resource: version
      params: {bump: minor}
    - put: next-version
      resource: version
      params: {file: next-version/number}
