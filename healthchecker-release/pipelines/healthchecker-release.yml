#@ load("@ytt:data", "data")

#@ load("ytt-helpers.star", "helpers")

groups:
- name: release
  jobs:
  - manual-release-trigger
  - unit-and-integration-tests
  - lint-repo
  - claim-env
  - prepare-env
  - export-release
  - ship-what
  - ship-it

- name: periodics
  jobs:
  - bump-dependencies-go-mod
  - bump-package-golang
  - sync-dot-github-dir
  - sync-readme

- name: cleanup
  jobs:
  - cleanup-time-gate
  - wait-for-env-lock-claim
  - wait-for-acceptance-tests
  - manual-cleanup-trigger
  - cleanup-env
  - force-cleanup-env
  - release-env-lock
  - restart-wait-for-env-lock-claim

- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump


#! Define-ResourceGroups
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: fork-pool
  type: registry-image
  source:
    repository: ebroberson/pool-resource

- name: fly
  type: docker-image
  source:
    repository: troykinsella/concourse-fly-resource
    tag: latest

#! Define-Resources
resources:
- name: fly
  type: fly
  source:
    url: "https://ci.funtime.lol"
    username: username
    password: password
    team: "wg-arp-networking"
    target: "wg-arp-networking"
    secure_output: true
    debug: false

- name: golang-release-latest
  type: git
  icon: tag-outline
  source:
    tag_filter: v*
    uri: https://github.com/bosh-packages/golang-release.git

- name: repo
  type: git
  icon: source-branch
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/healthchecker-release
    private_key: ((github-appruntimeplatform-bot/private-key))
    ignore_paths:
    - .github/
    - .gitignore
    - CODEOWNERS
    - LICENSE
    - NOTICE
    - README.md
    - docs/

#! repo-synced is a write-only resource to prevent readme
#! changes from triggering pipeline runs. See the description of "ignore_path"
#! here for more info: https://github.com/concourse/git-resource
- name: repo-synced
  type: git
  icon: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/healthchecker-release
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: release-branch 
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/healthchecker-release.git
    branch: release
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: develop-branch-mergeback
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/healthchecker-release.git
    branch: develop
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci

- name: repo-readme
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths: 
      - shared/*.md
      - healthchecker-release/*.md
      - healthchecker-release/readme/*.md

- name: go-version
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths: [go-version.json]

#! TIMERS
- name: weekly
  type: time
  icon: clock
  source:
    interval: '168h'
    start: 01:00
    stop: 01:59
    days:
      - Thursday 

- name: env-weekly
  type: time
  icon: clock
  source:
    interval: '168h'
    start: 01:00
    stop: 01:59
    days:
      - Friday

- name: cleanup-timer
  type: time
  icon: clock
  source:
    interval: '1h'

- name: manual-release-trigger
  type: time
  source:
    interval: '1m'

- name: manual-cleanup-trigger
  type: time
  source:
    interval: '1m'

- name: slack-ci-channel
  type: slack-notification
  source:
    url: ((slack-ci-channel/webhook))

- name: env
  type: git
  icon: sheep
  source:
    branch: main
    uri: git@github.com:cloudfoundry/app-runtime-platform-envs
    private_key: ((github-appruntimeplatform-bot/private-key))
    paths:
      - bbl-hlthchk-env

- name: github-release
  type: github-release
  icon: github
  source:
    access_token: ((github-appruntimeplatform-bot/access-token))
    repository: healthchecker-release
    owner: cloudfoundry

- name: draft-github-release 
  type: github-release
  icon: github
  source:
    access_token: ((github-appruntimeplatform-bot/access-token))
    drafts: true
    repository: healthchecker-release
    owner: cloudfoundry

- name: shared-templates
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci
    paths: 
      - shared/github

- name: version
  type: semver
  icon: counter
  source:
    driver: gcs
    bucket: ci-release-versions
    key: healthchecker-release/version
    json_key: ((gcp-wg-arp-oss-service-account/config-json))

- name: healthchecker-release-env-lock
  type: fork-pool
  icon: cloud-lock
  source:
    branch: main
    pool: healthchecker-release-env-lock 
    private_key: ((github-appruntimeplatform-bot/private-key))
    uri: git@github.com:cloudfoundry/runtime-ci-pools.git
    paths: healthchecker-release-env-lock 

- name: image
  type: registry-image
  icon: docker
  source:                                        
    repository: us-central1-docker.pkg.dev/cf-diego-pivotal/tas-runtime-dockerhub-mirror/cloudfoundry/tas-runtime-build
    username: _json_key
    password: ((gcp-wg-arp-service-account/config-json))
    tag: 'latest'

- name: bpm
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

#! Define-Jobs
jobs:
- name: manual-release-trigger
  plan:
  - put: manual-release-trigger

- name: manual-cleanup-trigger
  plan:
  - put: manual-cleanup-trigger

- name: bump-dependencies-go-mod
  serial: true
  on_failure: &ci-notification
    put: slack-ci-channel
    params:
      text: ":concourse-failed: $BUILD_PIPELINE_NAME failed on <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME>."
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: repo
      - get: image
      - get: weekly
        trigger: true
  - task: healthchecker-release-bump-dependencies-go-mod
    image: image
    file: ci/shared/tasks/bump-dependencies-go-mod/linux.yml
    params:
      GO_MODS: src/code.cloudfoundry.org/go.mod
      EXTRA_GO_TAGS: tools
  - put: repo
    params:
      rebase: true
      repository: bumped-repo

- name: bump-package-golang
  on_failure: *ci-notification
  plan:
  - in_parallel:
    - get: ci
    - get: go-version
      trigger: true
    - get: repo
    - get: image
    - get: golang-release-latest
      trigger: true

  - task: bump-golang-package-name
    image: image
    file: ci/shared/tasks/bump-golang-package-name/linux.yml
    params:
      PLATFORM: linux

  - task: bump-golang-linux
    file: ci/shared/tasks/bosh-vendor-package/linux.yml
    image: image
    input_mapping:
      repo: bumped-repo
      package-release: golang-release-latest
    params:
      PACKAGE_NAME: golang-*-linux
      GCP_BLOBSTORE_SERVICE_ACCOUNT_KEY: ((gcp-wg-arp-oss-service-account/config-json))

  - put: repo
    params:
      rebase: true
      repository: vendored-repo

- name: sync-dot-github-dir
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: image
      - get:  repo
      - get: shared-templates
        trigger: true
  - do:
    - task: sync-dot-github-dir
      file: ci/shared/tasks/sync-dot-github-dir/linux.yml
      image: image
    - put: repo-synced
      params:
       rebase: true
       repository: synced-repo

- name: sync-readme
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: image
      - get: repo
      - get: weekly
        trigger: true
      - get: repo-readme
        trigger: false
  - do:
    - task: sync-readme
      file: ci/shared/tasks/sync-readme/linux.yml
      image: image
    - put: repo-synced
      params:
       rebase: true
       repository: synced-repo

- name: unit-and-integration-tests
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
    - get: image
    - get: package-release
      resource: golang-release-latest
  - task: determine-image-tag
    image: image
    file: ci/shared/tasks/determine-image-tag/linux.yml
  - load_var: image_tag
    file: determined-image-tag/tag
  - in_parallel:
#@ for package in helpers.packages_without_configure_db(data.values.internal_repos):
    - task: #@ package.name
      file: ci/shared/tasks/run-bin-test/linux.yml
      vars:
        image_repository: cloudfoundry/tas-runtime-build
        image_password: ((gcp-wg-arp-service-account/config-json))
        image_tag: ((.:image_tag))
      params:
        DIR: #@ "src/code.cloudfoundry.org/{}".format(package.name)
#@ end

- name: lint-repo
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
    - get: image
  - task: lint-repo
    file: ci/shared/tasks/lint-repo/linux.yml
    image: image

- name: claim-env
  serial: true
  on_abort: &release-env-lock
    do:
      - put: healthchecker-release-env-lock
        params:
          release: healthchecker-release-env-lock
  on_failure: *release-env-lock
  plan:
  - in_parallel:
    - get: manual-release-trigger
      trigger: true
      passed: [ manual-release-trigger ]
    - get: ci
    - get: repo
      trigger: false
      passed:
        - unit-and-integration-tests
        - lint-repo
    - get: env-weekly
      trigger: true
    - get: image
    - get: env
    - get: healthchecker-release-env-lock
  - put: healthchecker-release-env-lock
    params:
      claim: healthchecker-release-env-lock
  - task: start-bbl-envs
    image: image
    file: ci/shared/tasks/start-gcp-instance/linux.yml
    input_mapping:
      bbl-state: env
    params:
      SERVICE_ACCOUNT_KEY: ((gcp-wg-arp-ci-bbl-service-account/config-json))
      BBL_STATE_DIR: bbl-hlthchk-env
      RESUME: false
  - task: wait-for-bosh-api
    file: ci/shared/tasks/wait-for-bosh-api/linux.yml
    image: image
    params:
      BBL_STATE_DIR: bbl-hlthchk-env

- name: prepare-env
  serial: true
  serial_groups: [acceptance]
  on_abort: *release-env-lock
  on_failure: *release-env-lock
  plan:
  - in_parallel:
    - get: manual-release-trigger
      trigger: true
      passed: [ claim-env ]
    - get: ci
    - get: repo
      passed: [claim-env]
      trigger: true
    - get: image
    - get: env
      passed: [claim-env]
      trigger: true
    - get: bpm
  - try: &delete-ea-deployment
      do:
        - task: bosh-deld
          image: image
          file: ci/shared/tasks/bosh-deld/linux.yml
          params:
            BBL_STATE_DIR: bbl-hlthchk-env
            DEPLOYMENT_NAME: example-app
  - task: upload-warden-stemcell
    file: ci/shared/tasks/bosh-upload-stemcell/linux.yml
    image: image
    params:
      BBL_STATE_DIR: bbl-hlthchk-env
      STEMCELL_URL: https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-jammy-go_agent
  - task: upload-bpm
    file: ci/shared/tasks/bosh-upload-release/linux.yml
    image: image
    params:
      BBL_STATE_DIR: bbl-hlthchk-env
    input_mapping:
      created-release-tarball: bpm
  - task: bosh-deploy-example-app
    image: image
    file: ci/shared/tasks/bosh-deploy-manifest/linux.yml
    params:
      BBL_STATE_DIR: bbl-hlthchk-env
      MANIFEST: ci/healthchecker-release/manifests/example-app.yml
      DEPLOYMENT_NAME: example-app
      ENVS: |
        DEPLOYMENT_RELEASE_DIR=$PWD/repo
        CF_STEMCELL_OS=ubuntu-jammy
        CF_AZ=z1
        CF_VM_TYPE=medium
        CF_NETWORK=default

- name: export-release
  serial: true
  serial_groups: [acceptance]
  plan:
  - in_parallel:
    - get: manual-release-trigger
      trigger: true
      passed: [ prepare-env ]
    - get: ci
    - get: repo
      passed: [prepare-env]
      trigger: true
    - get: image
    - get: env
      passed: [prepare-env]
      trigger: true
  - task: export-release
    file: ci/shared/tasks/bosh-export-release/linux.yml
    image: image
    params:
      DEPLOYMENT_NAME: example-app
      BBL_STATE_DIR: bbl-hlthchk-env

- name: ship-what
  on_success:
    put: slack-ci-channel
    params:
      text: ":concourse-succeeded: $BUILD_PIPELINE_NAME ship-what just ran. Maybe you should cut a release? $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME"
  plan:
    - in_parallel:
        steps:
        - get: manual-release-trigger
          trigger: true
          passed:
            - export-release
        - get: ci
        - get: repo
          passed:
            - export-release
          trigger: true
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: env
          passed:
            - export-release
          trigger: true

    - task: check-safe-to-release-repo
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: build-release-notes-healthchecker
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release

- name: ship-it
  serial: true
  plan:
    - in_parallel:
        steps:
        - get: ci
        - get: repo
          passed: [ ship-what ]
        - get: image
        - get: release-branch
          params:
            submodules: none
        - get: github-release
        - get: version
        - get: develop-branch-mergeback
          params:
            submodules: none

    - task: check-safe-to-release-branch
      image: image
      file: ci/shared/tasks/check-safe-to-release-repo/linux.yml
      input_mapping:
        release-repo: release-branch

    - task: build-release-notes-healthchecker
      image: image
      file: ci/shared/tasks/build-release-notes/linux.yml
      input_mapping:
        previous-github-release: github-release

    - task: bosh-finalize-release
      image: image
      file: ci/shared/tasks/bosh-finalize-release/linux.yml
      params:
        GCP_BLOBSTORE_SERVICE_ACCOUNT_KEY: ((gcp-wg-arp-oss-service-account/config-json))

    - put: release-branch
      params:
        repository: finalized-release-repo
        tag: version/number
        tag_prefix: v

    - task: merge-release-onto-develop
      image: image
      file: ci/shared/tasks/git-merge-branches/linux.yml
      input_mapping:
        source-branch: release-branch
        onto-branch: develop-branch-mergeback
      params:
        SOURCE_BRANCH_NAME: release
        ONTO_BRANCH_NAME: develop

    - in_parallel:
        steps:
        - put: draft-github-release
          params:
            name: version/number
            tag: version/number
            tag_prefix: v
            body: built-release-notes/notes.md
            globs:
            - finalized-release-tarball/healthchecker-*.tgz
        - put: develop-branch-mergeback
          params:
            repository: merged-branch
            merge: true

    - get: next-version
      resource: version
      params: {bump: minor}
    - put: next-version
      resource: version
      params: {file: next-version/number}

- name: cleanup-time-gate
  plan:
  - get: cleanup-timer
    trigger: true

- name: wait-for-env-lock-claim
  serial: true
  plan:
  - get: cleanup-timer
    trigger: true
    passed: [ cleanup-time-gate ]
  - get: healthchecker-release-env-lock
  - put: check-unclaimed-env-lock
    resource: healthchecker-release-env-lock
    params:
      check_unclaimed: healthchecker-release-env-lock
      retry-delay: 15m

- name: wait-for-acceptance-tests
  plan:
  - get: image
  - get: healthchecker-release-env-lock
    passed: [ wait-for-env-lock-claim ]
    trigger: true
  - task: sleep
    image: image
    config:
      platform: linux
      run: 
        path: sh
        args:
        - -exc
        - sleep 30m

- name: cleanup-env
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: env
      - get: image
      - get: manual-cleanup-trigger
        trigger: true
        passed: [ manual-cleanup-trigger ]
      - get: healthchecker-release-env-lock
        passed: [ wait-for-acceptance-tests ]
        trigger: true
  - try: *delete-ea-deployment
  - task: stop-bbl-envs
    image: image
    file: ci/shared/tasks/stop-gcp-instance/linux.yml
    input_mapping:
      bbl-state: env
    params:
      SERVICE_ACCOUNT_KEY: ((gcp-wg-arp-ci-bbl-service-account/config-json))
      BBL_STATE_DIR: bbl-hlthchk-env
      SUSPEND: false
  - try: *release-env-lock
  
- name: restart-wait-for-env-lock-claim
  plan:
  - get: healthchecker-release-env-lock
    passed: [ cleanup-env ]
    trigger: true
  - put: fly
    params:
      options: trigger-job -j healthchecker-release/wait-for-env-lock-claim

- name: release-env-lock
  plan:
  - get: healthchecker-release-env-lock
  - try: *release-env-lock

- name: force-cleanup-env
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: ci
      - get: env
      - get: image
  - try: *delete-ea-deployment
  - task: stop-bbl-envs
    image: image
    file: ci/shared/tasks/stop-gcp-instance/linux.yml
    input_mapping:
      bbl-state: env
    params:
      SERVICE_ACCOUNT_KEY: ((gcp-wg-arp-ci-bbl-service-account/config-json))
      BBL_STATE_DIR: bbl-hlthchk-env
      SUSPEND: false

#! versioning
- name: patch-bump
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: patch}
  - put: version
    params: {file: version/number}

- name: minor-bump
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor}
  - put: version
    params: {file: version/number}

- name: major-bump
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major}
  - put: version
    params: {file: version/number}
